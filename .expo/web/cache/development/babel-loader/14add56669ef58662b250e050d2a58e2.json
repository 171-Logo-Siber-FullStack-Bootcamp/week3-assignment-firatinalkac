{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Home!\"\n    })\n  });\n}\n\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings!\"\n    })\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function TabMenu() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n\n            if (route.name === 'Home') {\n              return _jsx(Ionicons, {\n                name: focused ? 'ios-information-circle' : 'ios-information-circle-outline',\n                size: size,\n                color: color\n              });\n            } else if (route.name === 'Settings') {\n              return _jsx(Ionicons, {\n                name: focused ? 'ios-list-box' : 'ios-list',\n                size: size,\n                color: color\n              });\n            }\n          },\n          tabBarInactiveTintColor: 'gray',\n          tabBarActiveTintColor: 'tomato'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          tabBarBadge: 3\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/navigation/TapMenu.js"],"names":["React","Ionicons","NavigationContainer","createBottomTabNavigator","HomeScreen","flex","justifyContent","alignItems","SettingsScreen","Tab","TabMenu","route","tabBarIcon","focused","color","size","name","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarBadge"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;AAEA,SAASC,UAAT,GAAsB;AAClB,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADJ;AAKH;;AAED,SAASC,cAAT,GAA0B;AACtB,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADJ;AAKH;;AAED,IAAME,GAAG,GAAGN,wBAAwB,EAApC;AAEA,eAAe,SAASO,OAAT,GAAmB;AAC9B,SACI,KAAC,mBAAD;AAAA,cACI,MAAC,GAAD,CAAK,SAAL;AACI,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC3BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;;AACtC,gBAAIJ,KAAK,CAACK,IAAN,KAAe,MAAnB,EAA2B;AACvB,qBACI,KAAC,QAAD;AACI,gBAAA,IAAI,EACAH,OAAO,GACD,wBADC,GAED,gCAJd;AAMI,gBAAA,IAAI,EAAEE,IANV;AAOI,gBAAA,KAAK,EAAED;AAPX,gBADJ;AAWH,aAZD,MAYO,IAAIH,KAAK,CAACK,IAAN,KAAe,UAAnB,EAA+B;AAClC,qBACI,KAAC,QAAD;AACI,gBAAA,IAAI,EAAEH,OAAO,GAAG,cAAH,GAAoB,UADrC;AAEI,gBAAA,IAAI,EAAEE,IAFV;AAGI,gBAAA,KAAK,EAAED;AAHX,gBADJ;AAOH;AACJ,WAvB0B;AAwB3BG,UAAAA,uBAAuB,EAAE,MAxBE;AAyB3BC,UAAAA,qBAAqB,EAAE;AAzBI,SAAhB;AAAA,OADnB;AAAA,iBA6BI,KAAC,GAAD,CAAK,MAAL;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAEd,UAFf;AAGI,QAAA,OAAO,EAAE;AAAEe,UAAAA,WAAW,EAAE;AAAf;AAHb,QA7BJ,EAkCI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEX;AAAvC,QAlCJ;AAAA;AADJ,IADJ;AAwCH","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction HomeScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Home!</Text>\n        </View>\n    );\n}\n\nfunction SettingsScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Settings!</Text>\n        </View>\n    );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function TabMenu() {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator\n                screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        if (route.name === 'Home') {\n                            return (\n                                <Ionicons\n                                    name={\n                                        focused\n                                            ? 'ios-information-circle'\n                                            : 'ios-information-circle-outline'\n                                    }\n                                    size={size}\n                                    color={color}\n                                />\n                            );\n                        } else if (route.name === 'Settings') {\n                            return (\n                                <Ionicons\n                                    name={focused ? 'ios-list-box' : 'ios-list'}\n                                    size={size}\n                                    color={color}\n                                />\n                            );\n                        }\n                    },\n                    tabBarInactiveTintColor: 'gray',\n                    tabBarActiveTintColor: 'tomato',\n                })}\n            >\n                <Tab.Screen\n                    name=\"Home\"\n                    component={HomeScreen}\n                    options={{ tabBarBadge: 3 }}\n                />\n                <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}