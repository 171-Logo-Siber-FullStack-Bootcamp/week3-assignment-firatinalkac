{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from \"../../firebase\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Register in with', user.email);\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      setEmail('');\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: styles.buttonOutline,\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 15,\n    borderWidth: 2,\n    borderColor: '#0782F9',\n    marginTop: 5,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/screens/LoginScreen.js"],"names":["React","useEffect","useState","auth","useNavigation","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","navigate","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","err","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderWidth","borderColor","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput} from \"react-native\";\nimport {TouchableOpacity} from \"react-native-web\";\nimport { auth } from \"../../firebase\";\nimport {useNavigation} from \"@react-navigation/native\";\n\nexport default function LoginScreen() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const navigation = useNavigation();\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if(user) {\n                navigation.navigate(\"Home\")\n            }\n        })\n        return unsubscribe\n    }, [])\n\n    const handleSignUp = () => {\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log('Register in with', user.email);\n            })\n            .catch(err => console.log(err.message))\n    }\n\n    const handleLogin = () => {\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                setEmail('');\n            })\n            .catch(err => console.log(err.message))\n    }\n\n    return (\n        <KeyboardAvoidingView\n            style={styles.container}\n            behavior=\"padding\"\n        >\n            <View style={styles.inputContainer}>\n                <TextInput\n                    placeholder=\"Email\"\n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                    style={styles.input}\n                />\n                <TextInput\n                    placeholder=\"Password\"\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    style={styles.input}\n                    secureTextEntry\n                />\n            </View>\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                    onPress={handleLogin}\n                    style={styles.button}\n                >\n                    <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    onPress={handleSignUp}\n                    style={styles.buttonOutline}\n                >\n                    <Text style={styles.buttonOutlineText}>Register</Text>\n                </TouchableOpacity>\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: 'center',\n    },\n    inputContainer: {\n        width: '80%',\n\n    },\n    input: {\n        backgroundColor: 'white',\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        borderRadius: 10,\n        marginTop: 5,\n    },\n    buttonContainer: {\n        width: '60%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 40,\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '100%',\n        padding: 15,\n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    buttonOutline: {\n        backgroundColor: 'white',\n        width: '100%',\n        padding: 15,\n        borderWidth: 2,\n        borderColor: '#0782F9',\n        marginTop: 5,\n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '700',\n        fontSize: 16,\n    },\n    buttonOutlineText: {\n        color: '#0782F9',\n        fontWeight: '700',\n        fontSize: 16,\n    }\n})"]},"metadata":{},"sourceType":"module"}