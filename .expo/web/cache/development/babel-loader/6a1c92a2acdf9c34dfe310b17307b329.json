{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function TodoScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/todos').then(function (response) {\n              setData(response.data);\n              console.log(response.data);\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      data: data,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          style: {\n            flex: 1,\n            marginHorizontal: 10,\n            marginTop: 24,\n            padding: 10,\n            fontSize: 15,\n            textTransform: 'capitalize',\n            backgroundColor: item.completed ? 'green' : 'red'\n          },\n          children: item.title\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingBottom: 20,\n    backgroundColor: '#fff'\n  },\n  item: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginTop: 24,\n    padding: 10,\n    fontSize: 15,\n    textTransform: 'capitalize'\n  }\n});","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/screens/TodoScreen.js"],"names":["React","useState","useEffect","axios","TodoScreen","data","setData","getData","get","then","response","console","log","catch","error","styles","container","item","id","flex","marginHorizontal","marginTop","padding","fontSize","textTransform","backgroundColor","completed","title","StyleSheet","create","paddingHorizontal","paddingBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNJ,KAAK,CAACK,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA6D,UAAAC,QAAQ,EAAI;AAC3EJ,cAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACL,IAArB;AACH,aAHK,EAGHQ,KAHG,CAGG,UAAAC,KAAK,EAAI;AACdH,cAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,aALK,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAZ,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAK,OAAO,EADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAEN,EAFM,CAAT;AAIA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA,cAEI,KAAC,QAAD;AACI,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA,OADlB;AAEI,MAAA,IAAI,EAAEb,IAFV;AAGI,MAAA,UAAU,EAAE;AAAA,YAAGY,IAAH,QAAGA,IAAH;AAAA,eACR,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEE,YAAAA,IAAI,EAAE,CAAR;AACTC,YAAAA,gBAAgB,EAAE,EADT;AAETC,YAAAA,SAAS,EAAE,EAFF;AAGTC,YAAAA,OAAO,EAAE,EAHA;AAITC,YAAAA,QAAQ,EAAE,EAJD;AAKTC,YAAAA,aAAa,EAAE,YALN;AAMTC,YAAAA,eAAe,EAAER,IAAI,CAACS,SAAL,GAAiB,OAAjB,GAA2B;AANnC,WAAb;AAAA,oBAOIT,IAAI,CAACU;AAPT,UADQ;AAAA;AAHhB;AAFJ,IADJ;AAoBH;AAED,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPW,IAAAA,iBAAiB,EAAE,EAFZ;AAGPC,IAAAA,aAAa,EAAE,EAHR;AAIPN,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BR,EAAAA,IAAI,EAAE;AACFE,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,gBAAgB,EAAE,EAFhB;AAGFC,IAAAA,SAAS,EAAE,EAHT;AAIFC,IAAAA,OAAO,EAAE,EAJP;AAKFC,IAAAA,QAAQ,EAAE,EALR;AAMFC,IAAAA,aAAa,EAAE;AANb;AAPuB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, FlatList } from \"react-native\";\nimport axios from \"axios\";\n\nexport default function TodoScreen() {\n    const [data, setData] = useState([])\n\n    const getData = async () => {\n        await axios.get('https://jsonplaceholder.typicode.com/todos').then(response => {\n            setData(response.data)\n            console.log(response.data)\n        }).catch(error => {\n            console.error(error)\n        })\n    }\n    useEffect(async () => {\n        await getData()\n    }, [])\n\n    return(\n        <View style={styles.container}>\n\n            <FlatList\n                keyExtractor={(item) => item.id}\n                data={data}\n                renderItem={({ item }) => (\n                    <Text style={{ flex: 1,\n                        marginHorizontal: 10,\n                        marginTop: 24,\n                        padding: 10,\n                        fontSize: 15,\n                        textTransform: 'capitalize',\n                        backgroundColor: item.completed ? 'green' : 'red'\n                    }}>{item.title}</Text>\n                )}\n            />\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingHorizontal: 10,\n        paddingBottom: 20,\n        backgroundColor: '#fff',\n    },\n    item: {\n        flex: 1,\n        marginHorizontal: 10,\n        marginTop: 24,\n        padding: 10,\n        fontSize: 15,\n        textTransform: 'capitalize'\n    },\n});"]},"metadata":{},"sourceType":"module"}