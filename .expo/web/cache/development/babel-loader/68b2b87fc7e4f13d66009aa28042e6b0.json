{"ast":null,"code":"import React, { useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Home!\"\n    })\n  });\n}\n\nfunction TodoScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"TodoScreen!\"\n    })\n  });\n}\n\nfunction UserScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"User!\"\n    })\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function TabMenu() {\n  var tabOffsetValue = useRef(new Animated.Value(0).current);\n  return _jsx(_Fragment, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarOptions: {\n        showLabel: false\n      },\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarInactiveTintColor: 'gray',\n          tabBarActiveTintColor: 'tomato',\n          tabBarStyle: {\n            backgroundColor: 'white',\n            position: 'absolute',\n            bottom: 15,\n            marginHorizontal: 20,\n            height: 60,\n            border: 'none',\n            borderRadius: 5\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            return _jsx(Ionicons, {\n              name: \"home-outline\",\n              size: 20,\n              color: focused ? 'tomato' : 'black'\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: TodoScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused;\n            return _jsx(Ionicons, {\n              name: \"list-outline\",\n              size: 23,\n              color: focused ? 'tomato' : 'black'\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"User\",\n        component: UserScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused;\n            return _jsx(Ionicons, {\n              name: \"person-outline\",\n              size: 20,\n              color: focused ? 'tomato' : 'black'\n            });\n          }\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/navigation/TapMenu.js"],"names":["React","useRef","Ionicons","createBottomTabNavigator","HomeScreen","flex","justifyContent","alignItems","TodoScreen","UserScreen","Tab","TabMenu","tabOffsetValue","Animated","Value","current","showLabel","route","headerShown","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarStyle","backgroundColor","position","bottom","marginHorizontal","height","border","borderRadius","tabBarIcon","focused"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport {Animated, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction HomeScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Home!</Text>\n        </View>\n    );\n}\n\nfunction TodoScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>TodoScreen!</Text>\n        </View>\n    );\n}\n\nfunction UserScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>User!</Text>\n        </View>\n    );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function TabMenu() {\n    const tabOffsetValue = useRef(new Animated.Value(0).current)\n    return (\n           <>\n               <Tab.Navigator\n                   tabBarOptions={{\n                       showLabel: false,\n                   }}\n                   screenOptions={({ route }) => ({\n                       headerShown: false,\n                       tabBarInactiveTintColor: 'gray',\n                       tabBarActiveTintColor: 'tomato',\n                       tabBarStyle: {\n                           backgroundColor: 'white',\n                           position: 'absolute',\n                           bottom: 15,\n                           marginHorizontal: 20,\n                           height: 60,\n                           border: 'none',\n                           borderRadius: 5,\n                       }\n                   })}\n               >\n                   <Tab.Screen\n                       name=\"Home\"\n                       component={HomeScreen}\n                       options={{\n                           tabBarIcon: ({focused}) => (\n                               <Ionicons\n                                   name='home-outline'\n                                   size={20}\n                                   color={focused ? 'tomato' : 'black'}\n                               />\n                           ),\n                       }}\n                   />\n                   <Tab.Screen name=\"Todo\" component={TodoScreen} options={{\n                       tabBarIcon: ({focused}) => (\n                           <Ionicons\n                               name='list-outline'\n                               size={23}\n                               color={focused ? 'tomato' : 'black'}\n                           />\n\n                       ),\n                   }} />\n                   <Tab.Screen name=\"User\" component={UserScreen} options={{\n                       tabBarIcon: ({focused}) => (\n                           <Ionicons\n                               name='person-outline'\n                               size={20}\n                               color={focused ? 'tomato' : 'black'}\n                           />\n\n                       ),\n                   }} />\n               </Tab.Navigator>\n           </>\n    );\n}"]},"metadata":{},"sourceType":"module"}