{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from \"axios\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/todos').then(function (response) {\n              setData(response.data);\n              console.log(response.data);\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"TODOS\"\n    }), _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      data: data,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(Text, {\n          style: styles.item,\n          children: [_jsx(View, {\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0\n            },\n            children: _jsx(Ionicons, {\n              name: item.completed ? 'checkmark-circle' : 'close-circle',\n              size: 20,\n              color: item.completed ? '#FF6000' : 'red'\n            })\n          }), _jsx(Text, {\n            children: item.title\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingBottom: 20,\n    backgroundColor: '#fff'\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    marginHorizontal: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#f3f3f3',\n    fontSize: 14,\n    textTransform: 'capitalize'\n  },\n  title: {\n    margin: 20\n  }\n});","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/screens/TodoScreen.js"],"names":["React","useState","useEffect","axios","Ionicons","TodoScreen","data","setData","getData","get","then","response","console","log","catch","error","styles","container","title","item","id","position","top","left","completed","StyleSheet","create","flex","paddingHorizontal","paddingBottom","backgroundColor","alignItems","marginHorizontal","borderRadius","marginTop","padding","fontSize","textTransform","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNL,KAAK,CAACM,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA6D,UAAAC,QAAQ,EAAI;AAC3EJ,cAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACL,IAArB;AACH,aAHK,EAGHQ,KAHG,CAGG,UAAAC,KAAK,EAAI;AACdH,cAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,aALK,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAb,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAM,OAAO,EADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAEN,EAFM,CAAT;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADJ,EAEI,KAAC,QAAD;AACI,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA,OADlB;AAEI,MAAA,IAAI,EAAEd,IAFV;AAGI,MAAA,UAAU,EAAE;AAAA,YAAGa,IAAH,QAAGA,IAAH;AAAA,eACR,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACG,IAApB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEE,cAAAA,QAAQ,EAAE,UAAZ;AAAwBC,cAAAA,GAAG,EAAE,CAA7B;AAAgCC,cAAAA,IAAI,EAAE;AAAtC,aAAb;AAAA,sBACI,KAAC,QAAD;AACI,cAAA,IAAI,EAAEJ,IAAI,CAACK,SAAL,GAAiB,kBAAjB,GAAsC,cADhD;AAEI,cAAA,IAAI,EAAE,EAFV;AAGI,cAAA,KAAK,EAAEL,IAAI,CAACK,SAAL,GAAiB,SAAjB,GAA6B;AAHxC;AADJ,YADJ,EAQI,KAAC,IAAD;AAAA,sBAAOL,IAAI,CAACD;AAAZ,YARJ;AAAA,UADQ;AAAA;AAHhB,MAFJ;AAAA,IADJ;AAsBH;AAED,IAAMF,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,iBAAiB,EAAE,EAFZ;AAGPC,IAAAA,aAAa,EAAE,EAHR;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BX,EAAAA,IAAI,EAAE;AACFQ,IAAAA,IAAI,EAAE,CADJ;AAEFI,IAAAA,UAAU,EAAE,QAFV;AAGFC,IAAAA,gBAAgB,EAAE,EAHhB;AAIFC,IAAAA,YAAY,EAAE,CAJZ;AAKFC,IAAAA,SAAS,EAAE,EALT;AAMFC,IAAAA,OAAO,EAAE,EANP;AAOFL,IAAAA,eAAe,EAAE,SAPf;AAQFM,IAAAA,QAAQ,EAAE,EARR;AASFC,IAAAA,aAAa,EAAE;AATb,GAPuB;AAkB7BnB,EAAAA,KAAK,EAAE;AACHoB,IAAAA,MAAM,EAAE;AADL;AAlBsB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, FlatList } from \"react-native\";\nimport axios from \"axios\";\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default function TodoScreen() {\n    const [data, setData] = useState([])\n\n    const getData = async () => {\n        await axios.get('https://jsonplaceholder.typicode.com/todos').then(response => {\n            setData(response.data)\n            console.log(response.data)\n        }).catch(error => {\n            console.error(error)\n        })\n    }\n    useEffect(async () => {\n        await getData()\n    }, [])\n\n    return(\n        <View style={styles.container}>\n            <Text style={styles.title}>TODOS</Text>\n            <FlatList\n                keyExtractor={(item) => item.id}\n                data={data}\n                renderItem={({ item }) => (\n                    <Text style={styles.item}>\n                        <View style={{ position: 'absolute', top: 0, left: 0}}>\n                            <Ionicons\n                                name={item.completed ? 'checkmark-circle' : 'close-circle'}\n                                size={20}\n                                color={item.completed ? '#FF6000' : 'red'}\n                            />\n                        </View>\n                        <Text>{item.title}</Text>\n                    </Text>\n                )}\n            />\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingHorizontal: 10,\n        paddingBottom: 20,\n        backgroundColor: '#fff',\n    },\n    item: {\n        flex: 1,\n        alignItems: 'center',\n        marginHorizontal: 10,\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 10,\n        backgroundColor: '#f3f3f3',\n        fontSize: 14,\n        textTransform: 'capitalize'\n    },\n    title: {\n        margin: 20,\n    }\n});"]},"metadata":{},"sourceType":"module"}