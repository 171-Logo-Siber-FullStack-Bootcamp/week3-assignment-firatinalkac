{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Home!\"\n    })\n  });\n}\n\nfunction UserScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"User!\"\n    })\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Home') {\n            return _jsx(Ionicons, {\n              name: focused ? 'ios-information-circle' : 'ios-information-circle-outline',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Settings') {\n            return _jsx(Ionicons, {\n              name: focused ? 'ios-list-box' : 'ios-list',\n              size: size,\n              color: color\n            });\n          }\n        },\n        tabBarInactiveTintColor: 'gray',\n        tabBarActiveTintColor: 'tomato'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(Ionicons, {\n            name: \"home\",\n            size: 20,\n            color: focused ? 'red' : 'black'\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"User\",\n      component: UserScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(Ionicons, {\n            name: \"ios-list-box\",\n            size: 20,\n            color: focused ? 'red' : 'black'\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/firatinalkac/Documents/workspace/logo-bootcamp/odev/week3-assignment-firatinalkac/src/navigation/TapMenu.js"],"names":["React","Ionicons","createBottomTabNavigator","HomeScreen","flex","justifyContent","alignItems","UserScreen","Tab","App","route","tabBarIcon","focused","color","size","name","tabBarInactiveTintColor","tabBarActiveTintColor"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;AAEA,SAASC,UAAT,GAAsB;AAClB,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADJ;AAKH;;AAED,SAASC,UAAT,GAAsB;AAClB,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,cACI,KAAC,IAAD;AAAA;AAAA;AADJ,IADJ;AAKH;;AAED,IAAME,GAAG,GAAGN,wBAAwB,EAApC;AAEA,eAAe,SAASO,GAAT,GAAe;AAC1B,SACQ,MAAC,GAAD,CAAK,SAAL;AACI,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;;AACtC,cAAIJ,KAAK,CAACK,IAAN,KAAe,MAAnB,EAA2B;AACvB,mBACI,KAAC,QAAD;AACI,cAAA,IAAI,EACAH,OAAO,GACD,wBADC,GAED,gCAJd;AAMI,cAAA,IAAI,EAAEE,IANV;AAOI,cAAA,KAAK,EAAED;AAPX,cADJ;AAWH,WAZD,MAYO,IAAIH,KAAK,CAACK,IAAN,KAAe,UAAnB,EAA+B;AAClC,mBACI,KAAC,QAAD;AACI,cAAA,IAAI,EAAEH,OAAO,GAAG,cAAH,GAAoB,UADrC;AAEI,cAAA,IAAI,EAAEE,IAFV;AAGI,cAAA,KAAK,EAAED;AAHX,cADJ;AAOH;AACJ,SAvB0B;AAwB3BG,QAAAA,uBAAuB,EAAE,MAxBE;AAyB3BC,QAAAA,qBAAqB,EAAE;AAzBI,OAAhB;AAAA,KADnB;AAAA,eA6BI,KAAC,GAAD,CAAK,MAAL;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAEd,UAFf;AAGI,MAAA,OAAO,EAAE;AACLQ,QAAAA,UAAU,EAAE;AAAA,cAAEC,OAAF,SAAEA,OAAF;AAAA,iBACR,KAAC,QAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAE,EAFV;AAGI,YAAA,KAAK,EAAEA,OAAO,GAAG,KAAH,GAAW;AAH7B,YADQ;AAAA;AADP;AAHb,MA7BJ,EA0CI,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,SAAS,EAAEL,UAAnC;AAA+C,MAAA,OAAO,EAAE;AACpDI,QAAAA,UAAU,EAAE;AAAA,cAAEC,OAAF,SAAEA,OAAF;AAAA,iBACR,KAAC,QAAD;AACI,YAAA,IAAI,EAAC,cADT;AAEI,YAAA,IAAI,EAAE,EAFV;AAGI,YAAA,KAAK,EAAEA,OAAO,GAAG,KAAH,GAAW;AAH7B,YADQ;AAAA;AADwC;AAAxD,MA1CJ;AAAA,IADR;AAsDH","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction HomeScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Home!</Text>\n        </View>\n    );\n}\n\nfunction UserScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>User!</Text>\n        </View>\n    );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n    return (\n            <Tab.Navigator\n                screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        if (route.name === 'Home') {\n                            return (\n                                <Ionicons\n                                    name={\n                                        focused\n                                            ? 'ios-information-circle'\n                                            : 'ios-information-circle-outline'\n                                    }\n                                    size={size}\n                                    color={color}\n                                />\n                            );\n                        } else if (route.name === 'Settings') {\n                            return (\n                                <Ionicons\n                                    name={focused ? 'ios-list-box' : 'ios-list'}\n                                    size={size}\n                                    color={color}\n                                />\n                            );\n                        }\n                    },\n                    tabBarInactiveTintColor: 'gray',\n                    tabBarActiveTintColor: 'tomato',\n                })}\n            >\n                <Tab.Screen\n                    name=\"Home\"\n                    component={HomeScreen}\n                    options={{\n                        tabBarIcon: ({focused}) => (\n                            <Ionicons\n                                name='home'\n                                size={20}\n                                color={focused ? 'red' : 'black'}\n                            />\n                        )\n                    }}\n                />\n                <Tab.Screen name=\"User\" component={UserScreen} options={{\n                    tabBarIcon: ({focused}) => (\n                        <Ionicons\n                            name='ios-list-box'\n                            size={20}\n                            color={focused ? 'red' : 'black'}\n                        />\n                    )\n                }} />\n            </Tab.Navigator>\n    );\n}"]},"metadata":{},"sourceType":"module"}